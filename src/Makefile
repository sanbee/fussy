CFLAGS   := -g -Wall -I. -I./emath
CXXFLAGS := $(CFLAGS)
LIBCALC_OBJECTS = calc.o calcinit.o tables.o vcode.o prtFuncs.o ErrorObj.o func.o BitField.o IDResource.o ExitMsg.o
LDFLAGS := -lreadline -lhistory -ltermcap -lm

fussy: fussy.o libcalc.a ./sla/libkum.a
	$(CXX) $(CXXFLAGS) $^ $(LDFLAGS) -o $@

libcalc.a: $(LIBCALC_OBJECTS)
	$(AR) r $@ $^

calc.o: y.tab.c
	$(CXX) $(CXXFLAGS) -c $< -o $@

prtFuncs.o: prtFuncs.cc vm.a type.a

vm.a:
	sh ./vmMake /usr/bin/g++ -g -Wall -I. -I.  -I./emath  > vm.a

type.a:
	sh ./typeMake y.tab.h > type.a

.PHONY: clean
clean:
	rm -f *.o *.a sla/*.o sla/libkum.a lex.yy.c y.tab.c y.tab.h

## sla/libkum

LIBKUM_SOURCES := $(wildcard sla/*.f)
LIBKUM_OBJECTS := $(patsubst %.f,%.o, $(LIBKUM_SOURCES))

FC = gfortran
FFLAGS = -O3

sla/libkum.a: $(LIBKUM_OBJECTS)
	$(AR) r $@ $^

fussyparse.yy: lex.yy.c

y.tab.c y.tab.h: fussyparse.yy
	$(YACC) -d -t -y -p calc_ $<

lex.yy.c: fussylex.l
	$(LEX) $<

# generated by g++ -MM
AngFmt.o: AngFmt.cc
BitField.o: BitField.cc
ErrorObj.o: ErrorObj.cc
ExitMsg.o: ExitMsg.cc namespace.h
IDResource.o: IDResource.cc IDResource.h BitField.h namespace.h
calcinit.o: calcinit.cc defns.h namespace.h
func.o: func.cc
fussy.o: fussy.cc namespace.h y.tab.h
tables.o: tables.cc
vcode.o: vcode.cc
yyerror.o: yyerror.c calc_lex_bison.h
